%% = Call-by-name functions with destinations for binding =
%% == Robert J. Simmons, Frank Pfenning ==

%% ''This examples is derived from Figure 8 in [[readme.txt |
%% Substructural Operational Semantics as Ordered Logic Programming]].''

%% == Call-by-name functions with destinations for binding ==

r₁ : eval(lam λx. E x) ->> return(lam E).
r₂ : eval(app E₁ E₂) ->> comp(app₁ E₂) • eval(E₁).
r₃ : comp(app₁ E₂) • return(lam λx. E₁' x) ->> ∃D₂. eval(E₁' D₂) • !bind D₂ E₂.
r₄ : eval(D) • !bind D E ->> eval(E).



%% == Example trace == 

%trace * eval(app (lam λx.x) (app (lam λy.y) (lam λz.c))).
